import { useState } from "react";
import {
  ChakraProvider,
  Button,
  Container,
  Box,
  HStack,
} from "@chakra-ui/react";
import Layout from "./components/Layout";
import CVETable from "./components/CVETable";
import AddCVEModal, { CVE } from "./components/AddCVEModal";
import EditCVEModal from "./components/EditCVEModal";
import theme from "./theme";

const App = () => {
  const [cves, setCves] = useState<CVE[]>([
    {
      id: "CVE-2022-1234",
      severity: "High",
      cvss: 7.5,
      affectedPackages: "Package A, Package B",
      cweId: "CWE-123",
    },
    {
      id: "CVE-2022-5678",
      severity: "Medium",
      cvss: 5.0,
      affectedPackages: "Package C",
      cweId: "CWE-456",
    },
    {
      id: "CVE-2003-4536",
      severity: "Critical",
      cvss: 9.0,
      affectedPackages: "Package A",
      cweId: "CWE-217",
    },
  ]);

  const [isAddModalOpen, setIsAddModalOpen] = useState(false);
  const [isEditModalOpen, setIsEditModalOpen] = useState(false);
  const [selectedCVE, setSelectedCVE] = useState<CVE | null>(null);
  const [isDarkMode, setIsDarkMode] = useState(false);

  const handleAddCVE = (newCVE: CVE) => {
    setCves([...cves, newCVE]);
    setIsAddModalOpen(false);
  };

  const handleEditCVE = (editedCVE: CVE) => {
    const updatedCVEs = cves.map((cve) =>
      cve.id === editedCVE.id ? editedCVE : cve
    );
    setCves(updatedCVEs);
    setIsEditModalOpen(false);
    setSelectedCVE(null);
  };

  const handleDeleteCVE = (id: string) => {
    setCves(cves.filter((cve) => cve.id !== id));
  };

  const handleOpenEditModal = (cve: CVE) => {
    setSelectedCVE(cve);
    setIsEditModalOpen(true);
  };

  const toggleDarkMode = () => {
    setIsDarkMode((prevMode) => !prevMode);
  };

  return (
    <ChakraProvider theme={isDarkMode ? theme : undefined}>
      <Box
        bg={isDarkMode ? "gray.800" : "white"}
        color={isDarkMode ? "white" : "gray.800"}
        minHeight="100vh"
      >
        <Layout>
          <Container maxW="container.lg" mt={4}>
            <HStack justify="space-between" align="center" mb={4}>
              <Button
                colorScheme="teal"
                onClick={() => setIsAddModalOpen(true)}
              >
                Add CVE
              </Button>
              <Button onClick={toggleDarkMode} ml={4}>
                {isDarkMode ? "Light Mode" : "Dark Mode"}
              </Button>
            </HStack>
            <CVETable
              cves={cves}
              onEdit={handleOpenEditModal}
              onDelete={handleDeleteCVE}
            />
            <AddCVEModal
              isOpen={isAddModalOpen}
              onClose={() => setIsAddModalOpen(false)}
              onSave={handleAddCVE}
            />
            <EditCVEModal
              isOpen={isEditModalOpen}
              onClose={() => setIsEditModalOpen(false)}
              onSave={handleEditCVE}
              initialCVE={selectedCVE || undefined}
            />
          </Container>
        </Layout>
      </Box>
    </ChakraProvider>
  );
};

export default App;
