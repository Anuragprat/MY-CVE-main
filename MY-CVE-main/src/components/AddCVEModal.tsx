import React, { useState } from "react";
import {
  Modal,
  ModalOverlay,
  ModalContent,
  ModalHeader,
  ModalFooter,
  ModalBody,
  Button,
  FormControl,
  FormLabel,
  Input,
  useDisclosure,
} from "@chakra-ui/react";

interface Props {
  isOpen: boolean;
  onClose: () => void;
  onSave: (cve: CVE) => void;
}

export interface CVE {
  id: string;
  severity: string;
  cvss: number;
  affectedPackages: string;
  cweId: string;
}

const AddCVEModal: React.FC<Props> = ({ isOpen, onClose, onSave }) => {
  const {
    isOpen: isConfirmOpen,
    onOpen: onConfirmOpen,
    onClose: onConfirmClose,
  } = useDisclosure();
  const [newCVE, setNewCVE] = useState<CVE>({
    id: "",
    severity: "",
    cvss: 0,
    affectedPackages: "",
    cweId: "",
  });

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setNewCVE({ ...newCVE, [name]: value });
  };

  const handleSave = () => {
    if (validateInputs()) {
      onSave(newCVE);
      setNewCVE({
        id: "",
        severity: "",
        cvss: 0,
        affectedPackages: "",
        cweId: "",
      });
      onClose();
    } else {
      onConfirmOpen();
    }
  };

  const validateInputs = () => {
    return (
      newCVE.id !== "" &&
      newCVE.severity !== "" &&
      newCVE.affectedPackages !== "" &&
      newCVE.cweId !== ""
    );
  };

  return (
    <>
      <Modal isOpen={isOpen} onClose={onClose}>
        <ModalOverlay />
        <ModalContent>
          <ModalHeader>Add New CVE Record</ModalHeader>
          <ModalBody>
            <FormControl mb={4}>
              <FormLabel>CVE-ID</FormLabel>
              <Input name="id" value={newCVE.id} onChange={handleInputChange} />
            </FormControl>
            <FormControl mb={4}>
              <FormLabel>Severity</FormLabel>
              <Input
                name="severity"
                value={newCVE.severity}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl mb={4}>
              <FormLabel>CVSS</FormLabel>
              <Input
                type="number"
                name="cvss"
                value={newCVE.cvss}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl mb={4}>
              <FormLabel>Affected Packages</FormLabel>
              <Input
                name="affectedPackages"
                value={newCVE.affectedPackages}
                onChange={handleInputChange}
              />
            </FormControl>
            <FormControl mb={4}>
              <FormLabel>CWE-ID</FormLabel>
              <Input
                name="cweId"
                value={newCVE.cweId}
                onChange={handleInputChange}
              />
            </FormControl>
          </ModalBody>
          <ModalFooter>
            <Button colorScheme="blue" onClick={handleSave}>
              Save
            </Button>
            <Button colorScheme="gray" ml={2} onClick={onClose}>
              Cancel
            </Button>
          </ModalFooter>
        </ModalContent>
      </Modal>
      <Modal isOpen={isConfirmOpen} onClose={onConfirmClose}>
        <ModalOverlay />
        <ModalContent>
          <ModalHeader>Error</ModalHeader>
          <ModalBody>Please fill in all required fields.</ModalBody>
          <ModalFooter>
            <Button colorScheme="blue" onClick={onConfirmClose}>
              OK
            </Button>
          </ModalFooter>
        </ModalContent>
      </Modal>
    </>
  );
};

export default AddCVEModal;
